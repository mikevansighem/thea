# Appveyor is used for Windows testing
# Travis-CI for Linux testing, OSX testing, generating coverage,
# uploading coverage to Codacy, building documentation,
# deploying documentation.

cache: pip

os: linux

language: python

# See: https://pythonhosted.org/CodeChat/.travis.yml.html
before_install: |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew install openssl readline
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    # I didn't do this above because it works and I'm lazy.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    # A manual check that the correct version of Python is running.
    python --version
  fi

install:
  - pip install tox

script:
  - tox -e $TOXENV

jobs:
  include:

    # Testing on linux
    - python: "3.6"
      env: TOXENV=py36
      os: linux
    - python: "3.7"
      env: TOXENV=py37
      os: linux
      dist: xenial # needed because Python 3.7 is broken on Travis CI Trusty
    - python: "3.8-dev"
      env: TOXENV=py38
      os: linux
      dist: xenial # needed because Python 3.8 is broken on Travis CI Trusty

    # Testing on osx, see: https://pythonhosted.org/CodeChat/.travis.yml.html
    - language: generic
      env: PYTHON=3.6
      env: TOXENV=py36
      os: osx
    - language: generic
      env: PYTHON=3.7
      env: TOXENV=py37
      os: osx
    - language: generic
      env: PYTHON=3.8
      env: TOXENV=py38
      os: osx

    # Formatting and docs tests
    - python: "3.6"
      env: TOXENV=flake8
    - python: "3.6"
      env: TOXENV=coverage
      before_cache:
        - pip install codacy-coverage
        - python-codacy-coverage -r coverage.xml
    - python: "3.6"
      env: TOXENV=black
    - python: "3.6"
      env: TOXENV=docs
    - python: "3.6"
      env: TOXENV=mypy
    - python: "3.6"
      env: TOXENV=safety


    # Publish on PyPi if there is a tag
    - stage: publish on pypi
      python: 3.6
      install:
        - pip install poetry
      script:
        - poetry publish --build -u mikevansighem -p $PYPI_PASSWORD -v
      if: tag IS present

    # Documentation deployment if there is a tag
    - stage: deploy docs
      python: 3.6
      install:
        - pip install poetry
      script:
        - poetry install -v --extras "docs"
        - poetry run python scripts/env_properties_to_docs.py
        - poetry run mkdocs build --verbose --clean --strict
      deploy:
        provider: pages
        skip-cleanup: true
        github-token: $GITHUB_TOKEN
        keep-history: true
        local_dir: site
      if: branch = master

  # Allow failure on experimental environments
  allow_failures:
    - env: TOXENV=mypy
    - env: TOXENV=py38
    - os: osx

notifications:
  email:
    recipients:
      - mikevansighem@gmail.com
    on_success: change
    on_failure: always
    on_start: never

  webhooks:
    urls:
      - YOUR_WEBHOOK_URL
    on_success: change
    on_failure: always
    on_start: never
